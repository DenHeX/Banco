/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Views;


//import static Cliente.FrmCliente.txtCorreo;
import Person.Customer.*;
import Controller.Controller;
import Person.Controller.CustomerController;
import Views.View;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Person.Customer; 
import static Views.FrmCustomer.txtId;
import static Views.FrmCustomer.txtName;
import static Views.FrmCustomer.txtdateOfBirth;
import static Views.FrmCustomer.txtPhone;
import static Views.FrmCustomer.txtEmail;
import static Views.FrmCustomer.txtAddress;
import java.awt.event.MouseEvent;

/**
 *
 * @author jprod
 */
public class FrmBuscarCustomer extends javax.swing.JInternalFrame implements View<Customer> {  

    static Object getTblEmpleados() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
// Cambio del nombre de la clase
    private Controller controller;
    private Customer cliente;
    private FrmCustomer frmCliente;

    public FrmBuscarCustomer() {
        initComponents();
        this.cliente = cliente;
        this.frmCliente = frmCliente;
        this.loadPuestos();  
        //this.controller = new CustomerController(this);  // Cambio del nombre de la clase
        //this.controller.readAll(); 
    }
     
    private void loadPuestos() {
   
    }
    
//    @Override
//    public void clear() {
//        txtIdentificacion.setText("");
//        txtNombre.setText("");
//        txtTelefono.setText("");
//        //txtPuesto.setText("");
//        txtSalario.setText("");
//    }

//    @Override
//    public void display(Cliente cliente) {  
//        frmCliente.txtIdentificacion.setText(String.valueOf(cliente.getIdentificacion()));
//        frmCliente.txtNombre.setText(cliente.getNombre());
//        frmCliente.txtTelefono.setText(String.valueOf(cliente.getTelefono()));
//        frmCliente.txtCorreo.setText(cliente.getCorreo());
//        frmCliente.txtFechaNacimiento.setValue(cliente.getFechaNacimiento());
//        this.dispose();
//    }
//    
//    @Override
//    public void displayAll(Cliente[] regs) {  
//        DefaultTableModel tableModel = (DefaultTableModel) tblClientes.getModel();
//        tableModel.setNumRows(0);
//        for (Cliente cliente : regs) {
//            Object[] data = cliente.toArrayObject();
//            tableModel.addRow(data);
//        }
//        tblClientes.setModel(tableModel);
//    }

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtFiltro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();

        setClosable(true);
        setTitle("Buscar Cliente");

        txtFiltro.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "dateOfBirth", "phone", "email", "address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClientes.setColumnSelectionAllowed(true);
        tblClientes.getTableHeader().setReorderingAllowed(false);
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        tblClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblClientesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblClientes);
        tblClientes.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1072, Short.MAX_VALUE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        Table.filter(this.tblClientes, txtFiltro.getText());
    }//GEN-LAST:event_txtFiltroKeyReleased

    private void tblClientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblClientesKeyReleased
//        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
//            int row = tblClientes.getSelectedRow();
//            if (row > -1) {
//                Object id = tblClientes.getValueAt(row, 0);
//                controller.delete(new Customer(id.toString()));  // Cambio del nombre de la clase
//            }
//        }
    }//GEN-LAST:event_tblClientesKeyReleased

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
        if (evt.getClickCount() == 2) {
            int row = tblClientes.getSelectedRow();
            Object id = tblClientes.getValueAt(row, 0);
            controller.read((String) id);
        }
    }//GEN-LAST:event_tblClientesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables


}
